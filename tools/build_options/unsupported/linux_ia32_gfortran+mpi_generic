#!/bin/bash
#
#
#  Build options for the gfortran compiler with a generic MPI
#
# DON'T FORGET to set environment variable MPI_INC_DIR to the include
# directory of your MPI implementation
#
#  It fixes the ' \' versus ' &' terminator problem ;
#  some namelist problems remain with old version (The biggest seems 
#     to be the inability to support namelist syntax such as:
#     fields(1,1) = 'UVELSLT ','VVELSLT ','WVELSLT ',
#      which results in run-time errors).


FC=${FC:=mpif77 -m32}
F90C=${F90C:=mpif90 -m32}
CC=${CC:=mpicc -m32}

DEFINES='-DALLOW_USE_MPI -DALWAYS_USE_MPI -DWORDLENGTH=4 -DNML_TERMINATOR'
CPP='cpp -traditional -P'
EXTENDED_SRC_FLAG='-ffixed-line-length-132'
OMPFLAG='-fopenmp'

NOOPTFLAGS='-O0'
NOOPTFILES=''

INCLUDEDIRS=''
INCLUDES=''
LIBS=''

if test "x$DEVEL" != x ; then
    FFLAGS='-g -Wall -W -ffpe-trap=invalid,zero,overflow -fbounds-check'
else
    FFLAGS=''
fi

# Requires gfortran from 2006 onwards for -fconvert=big-endian
FFLAGS="$FFLAGS -fconvert=big-endian -fimplicit-none"
#- otherwise, switch to the home-made byte-swap:
#DEFINES="-D_BYTESWAPIO $DEFINES"

if test "x$IEEE" = x ; then
    #  No need for IEEE-754
    FOPTIM='-O3 -funroll-loops'
else
    #  Try to follow IEEE-754
    has_sse2=f
    grep flags /proc/cpuinfo | grep sse2 > /dev/null 2>&1  &&  has_sse2=t
    if test "x$has_sse2" = xt ; then
        FOPTIM='-O0 -mfpmath=sse -msse -msse2'
    else
        FOPTIM='-O0 -ffloat-store'
    fi
fi
#  version 4.3.0 has problems with option "-malign-double" ;
#  may want to put it back with older/newer version (when it works)
#FOPTIM="$FOPTIM -malign-double"
F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM
CFLAGS=$FOPTIM

if [ "x$NETCDF_ROOT" != x ] ; then
    INCLUDEDIR="${NETCDF_ROOT}/include"
    INCLUDES="-I${NETCDF_ROOT}/include"
    LIBDIR="${NETCDF_ROOT}/lib"
    LIBS="-L${NETCDF_ROOT}/lib"
elif [ "x$NETCDF_HOME" != x ]; then
    INCLUDEDIR="${NETCDF_HOME}/include"
    INCLUDES="-I${NETCDF_HOME}/include"
    LIBDIR="${NETCDF_HOME}/lib"
    LIBS="-L${NETCDF_HOME}/lib"
elif [ "x$NETCDF_INC" != x -a "x$NETCDF_LIB" != x ]; then
    NETCDF_INC=`echo $NETCDF_INC | sed 's/-I//g'`
    NETCDF_LIB=`echo $NETCDF_LIB | sed 's/-L//g'`
    INCLUDEDIR="${NETCDF_INC}"
    INCLUDES="-I${NETCDF_INC}"
    LIBDIR="${NETCDF_LIB}"
    LIBS="-L${NETCDF_LIB}"
elif [ "x$NETCDF_INCDIR" != x -a "x$NETCDF_LIBDIR" != x ]; then
    INCLUDEDIR="${NETCDF_INCDIR}"
    INCLUDES="-I${NETCDF_INCDIR}"
    LIBDIR="${NETCDF_LIBDIR}"
    LIBS="-L${NETCDF_LIBDIR}"
elif test -d /usr/include/netcdf-3 ; then
    INCLUDES='-I/usr/include/netcdf-3'
    LIBS='-L/usr/lib/netcdf-3 -L/usr/lib64/netcdf-3'
elif test -d /usr/include/netcdf ; then
    INCLUDES='-I/usr/include/netcdf'
elif test -d /usr/local/netcdf ; then
    INCLUDES='-I/usr/local/netcdf/include'
    LIBS='-L/usr/local/netcdf/lib'
elif test -d /usr/local/include/netcdf.inc ; then
    INCLUDES='-I/usr/local/include'
    LIBS='-L/usr/local/lib64'
fi

INCLUDES="$INCLUDES -I$MPI_INC_DIR"
INCLUDEDIRS="$INCLUDEDIRS $MPI_INC_DIR"
MPIINCLUDEDIR="$MPI_INC_DIR"
MPI_HEADER_FILES='mpif.h mpiof.h'
MPI_HEADER_FILES_INC='./mpi_headers/mpif.h ./mpi_headers/mpiof.h'
