#!/bin/bash
#
#

#  Tested with gcc-gfortran v4.1.1 on FC5, FC6, FC8, using flags
#              formally for gcc-gfortran 4.3*
#       + with gcc-gfortran v4.3.0 on FC9
#  It fixes the ' \' versus ' &' terminator problem ;
#  some namelist problems remain with old version (The biggest seems
#     to be the inability to support namelist syntax such as:
#     fields(1,1) = 'UVELSLT ','VVELSLT ','WVELSLT ',
#      which results in run-time errors).

#-------
# run with OpenMP: needs to set environment var. OMP_NUM_THREADS
#    and generally, needs to increase the thread stack-size:
#   -  sh,bash:
#     > export OMP_NUM_THREADS=2
#     > export GOMP_STACKSIZE=400m
#   - csh,tcsh:
#     > setenv OMP_NUM_THREADS 2
#     > setenv GOMP_STACKSIZE 400m
#-------

FC=gfortran
F90C=gfortran
CC=gcc
DEFINES='-DWORDLENGTH=4 -DNML_TERMINATOR'
CPP='cpp -traditional -P'
NOOPTFLAGS='-O0'
EXTENDED_SRC_FLAG='-ffixed-line-length-132'
OMPFLAG='-fopenmp'

if test "x$DEVEL" != x ; then
    FFLAGS='-g -Wall -W -ffpe-trap=invalid,zero,overflow -fbounds-check'
else
    FFLAGS=''
fi

# Requires gfortran from 2006 onwards for -fconvert=big-endian
FFLAGS="$FFLAGS -fconvert=big-endian -fimplicit-none"
#- otherwise, switch to the home-made byte-swap:
#DEFINES="-D_BYTESWAPIO $DEFINES"

has_sse2=f
grep flags /proc/cpuinfo | grep sse2 > /dev/null 2>&1  &&  has_sse2=t
if test "x$IEEE" = x ; then
    #  No need for IEEE-754
    if test "x$has_sse2" = xt ; then
        FOPTIM='-O3 -funroll-loops -ftree-vectorize -msse -msse2'
    else
        FOPTIM='-O3 -funroll-loops'
    fi
else
    #  Try to follow IEEE-754
    has_sse2=f
    grep flags /proc/cpuinfo | grep sse2 > /dev/null 2>&1  &&  has_sse2=t
    if test "x$has_sse2" = xt ; then
        FOPTIM='-O0 -ftree-vectorize -mfpmath=sse -msse -msse2'
    else
        FOPTIM='-O0 -ffloat-store'
    fi
fi
#  version 4.3.0 has problems with option "-malign-double" ;
#  may want to put it back with older/newer version (when it works)
#FOPTIM="$FOPTIM -malign-double"
F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM
CFLAGS=$FOPTIM

if [ "x$NETCDF_ROOT" != x ] ; then
    INCLUDEDIR="${NETCDF_ROOT}/include"
    INCLUDES="-I${NETCDF_ROOT}/include"
    LIBDIR="${NETCDF_ROOT}/lib"
    LIBS="-L${NETCDF_ROOT}/lib"
elif [ "x$NETCDF_HOME" != x ]; then
    INCLUDEDIR="${NETCDF_HOME}/include"
    INCLUDES="-I${NETCDF_HOME}/include"
    LIBDIR="${NETCDF_HOME}/lib"
    LIBS="-L${NETCDF_HOME}/lib"
elif [ "x$NETCDF_INC" != x -a "x$NETCDF_LIB" != x ]; then
    NETCDF_INC=`echo $NETCDF_INC | sed 's/-I//g'`
    NETCDF_LIB=`echo $NETCDF_LIB | sed 's/-L//g'`
    INCLUDEDIR="${NETCDF_INC}"
    INCLUDES="-I${NETCDF_INC}"
    LIBDIR="${NETCDF_LIB}"
    LIBS="-L${NETCDF_LIB}"
elif [ "x$NETCDF_INCDIR" != x -a "x$NETCDF_LIBDIR" != x ]; then
    INCLUDEDIR="${NETCDF_INCDIR}"
    INCLUDES="-I${NETCDF_INCDIR}"
    LIBDIR="${NETCDF_LIBDIR}"
    LIBS="-L${NETCDF_LIBDIR}"
elif test -d /usr/include/netcdf-3 ; then
    INCLUDES='-I/usr/include/netcdf-3'
    LIBS='-L/usr/lib/netcdf-3'
elif test -d /usr/include/netcdf ; then
    INCLUDES='-I/usr/include/netcdf'
elif test -d /usr/local/netcdf ; then
    INCLUDES='-I/usr/local/netcdf/include'
    LIBS='-L/usr/local/netcdf/lib'
elif test -d /usr/local/include/netcdf.inc ; then
    INCLUDES='-I/usr/local/include'
    LIBS='-L/usr/local/lib'
fi
